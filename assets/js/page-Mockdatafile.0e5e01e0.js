(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{844:function(t,e,n){"use strict";n.r(e);var s=n(1),a=Object(s.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("p",[t._v("You can define your mock data file like below:")]),t._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * Note: Only the first comments block will be parsed.\n *\n * The url to be mocked.\n * Both string and RegExp(which begins and ends with # or /) are supported.\n * RegExp example: #.*\\/getUserInfo.*#\n * @url https://jsonplaceholder.typicode.com/todos/1\n *\n * The request method to be mocked.\n * One of http verb method get, post, put, patch, delete, head.\n * Default: any\n * @method any\n *\n * Response http status to be mocked.\n * Default: 200\n * @status 200\n *\n * Response http headers to be mocked.\n * It can be set repeatedly.\n * @header content-type: application/json\n *\n * Simulate network latency in milliseconds.\n * Default: 0\n * @delay 100\n *\n * Limited number of mocking.\n * It'll do a real network request after specified number of mocking.\n * Default: Infinity\n * @times 5\n *\n * Whether or not to enable this mock item.\n * 'yes' for real network request, 'no' for mock request.\n * Default: no\n * @disable no\n */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Response body to be mocked.")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// It supports to export an object, function, async function, sting or any other types.")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// If a function was specified, the function accepts an argument with request information.")]),t._v("\nmodule"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("exports")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("requestInfo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Your response data'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("At tags(@url, @method, @status ...) in the comments above will be parsed by webpack plugin or cli.")])])}),[],!1,null,null,null);e.default=a.exports}}]);
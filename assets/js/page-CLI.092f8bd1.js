(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{608:function(e,t,n){"use strict";n.r(t);var o=n(1),i=Object(o.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h2",{attrs:{id:"command-line-tool-options"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#command-line-tool-options"}},[e._v("#")]),e._v(" Command Line Tool Options")]),e._v(" "),n("p",[n("code",[e._v("npx http-request-mock-cli -h")]),e._v(":")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('Usage: npx http-request-mock-cli [options]\n\nDescription: http-request-mock command line tool at version 1.6.3.\nGlossary: [.runtime.js] A runtime mock configuration entry file.\nExample:\n    npx http-request-mock-cli -i\n\nOptions:\n  -d, --directory [directory]       The mock directory relative to the working directory. (default: "mock")\n  -e, --enviroment [variable-pair]  Enable mock function by enviroment variable for .runtime.js.\n                                    (default: "NODE_ENV=development")\n  -i, --init                        Initialize some samples & a .runtime.js in the mock directory.\n  -w, --watch [command]             Watch mock directory & update .runtime.js. If the [command] is specified,\n                                    ths specified command will be executed together with watching.\n  -j, --inject <app-entry-file>     Inject .runtime.js into the specified entry relative to the working directory.\n  -t, --type [module-type]          The module type of .runtime.js.\n                                    Possible values are: es6, cjs(alias of commonjs).\n                                    (default: "cjs")\n  -p, --proxy [mode]                Proxy mode. In proxy mode, http-request-mock will start\n                                    a proxy server which recives incoming requests on localhost.\n                                    The module type of .runtime.js will be changed to cjs and\n                                    mock files will be run in a node enviroment.\n                                    Note: proxy mode is still under experimental stage, only for experts.\n                                    [matched] Proxy requests which are matched your defined mock items.\n                                    [all] Proxy all incoming requests.\n                                    [none] Do not start a proxy server. (default: "none")\n  --proto                           Generate mock files by proto files.\n  -h, --help                        output usage information\n')])])])])}),[],!1,null,null,null);t.default=i.exports}}]);